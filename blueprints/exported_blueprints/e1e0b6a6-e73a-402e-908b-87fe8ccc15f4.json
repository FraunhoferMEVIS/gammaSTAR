{
  "definitions": {
    "idx_repetition_forwarding": {
      "forward_as": "repetition.slicegroup.segment.slice.kernel.idx_repetition",
      "name": "idx_repetition_forwarding",
      "source_to_forward": "repetition.counter",
      "type": "forwarding_definition"
    },
    "idx_segment_forwarding": {
      "forward_as": "repetition.slicegroup.segment.slice.kernel.idx_segment",
      "name": "idx_segment_forwarding",
      "source_to_forward": "repetition.slicegroup.segment.counter",
      "type": "forwarding_definition"
    },
    "idx_segment_prescan_forwarding": {
      "forward_as": "prescan.slicegroup.segment.slice.kernel.idx_segment",
      "name": "idx_segment_prescan_forwarding",
      "source_to_forward": "prescan.slicegroup.segment.counter",
      "type": "forwarding_definition"
    },
    "is_right_TI": {
      "name": "is_right_TI",
      "script": "if inversion_recovery ~= 'None' then\n  return ge(t_before_center+TI-t_before_exc-fat_dur, inv_dur)\nelse\n  return true\nend",
      "sources": {
        "TI": "TI",
        "fat_dur": "repetition.slicegroup.segment.slice.fatsat.duration",
        "inv_dur": "repetition.slicegroup.segment.slice.invrec.duration",
        "inversion_recovery": "inversion_recovery",
        "t_before_center": "repetition.slicegroup.segment.slice.invrec.t_before_center",
        "t_before_exc": "repetition.slicegroup.segment.slice.kernel.t_before_exc"
      },
      "type": "parameter_definition"
    },
    "is_right_TR": {
      "name": "is_right_TR",
      "script": "if inversion_recovery ~= 'None' then\n  return le(slice_length*(t_before_center+TI-t_before_exc+kernel_dur), TR)\nelse\n  return le(slice_length*(fat_dur+kernel_dur), TR)\nend",
      "sources": {
        "TI": "TI",
        "TR": "TR",
        "fat_dur": "repetition.slicegroup.segment.slice.fatsat.duration",
        "inversion_recovery": "inversion_recovery",
        "kernel_dur": "repetition.slicegroup.segment.slice.kernel.duration",
        "slice_length": "repetition.slicegroup.segment.slice.length",
        "t_before_center": "repetition.slicegroup.segment.slice.invrec.t_before_center",
        "t_before_exc": "repetition.slicegroup.segment.slice.kernel.t_before_exc"
      },
      "type": "parameter_definition"
    },
    "is_right_matrix_phase": {
      "name": "is_right_matrix_phase",
      "script": "local factor = 1\nif PAT_mode ~= 'None' then\n  factor = PAT_factor\nend\nreturn (kernel_info.num_lines['phase'] / factor) % ETL == 0",
      "sources": {
        "ETL": "echo_train_length",
        "PAT_factor": "PAT_factor_phase",
        "PAT_mode": "PAT_mode",
        "kernel_info": "repetition.slicegroup.segment.slice.kernel.kernel_info"
      },
      "type": "parameter_definition"
    },
    "is_right_matrix_slice": {
      "name": "is_right_matrix_slice",
      "script": "if seq_dim == 3 then\n  local factor = 1\n  if PAT_mode ~= 'None' then\n    factor = PAT_factor\n  end\n  return (kernel_info.num_lines['slice'] / factor) % TF == 0\nend\nreturn true",
      "sources": {
        "PAT_factor": "PAT_factor_slice",
        "PAT_mode": "PAT_mode",
        "TF": "turbo_factor",
        "kernel_info": "repetition.slicegroup.segment.slice.kernel.kernel_info",
        "seq_dim": "info_seq_dim"
      },
      "type": "parameter_definition"
    },
    "offcenter_excitation_forwarding": {
      "forward_as": "offcenter",
      "name": "offcenter_excitation_forwarding",
      "source_to_forward": "offcenter_exc_1",
      "type": "forwarding_definition"
    },
    "orientation_excitation_forwarding": {
      "forward_as": "orientation",
      "name": "orientation_excitation_forwarding",
      "source_to_forward": "orientation_exc_1",
      "type": "forwarding_definition"
    },
    "pat_ref": {
      "blueprint_id": "e4a0eb30-8e11-48a4-a7e9-0ce6fef43d1b",
      "name": "pat_ref",
      "type": "sequence_element_definition"
    },
    "pat_ref.tstart": {
      "name": "pat_ref.tstart",
      "script": "return 0",
      "sources": {},
      "type": "parameter_definition"
    },
    "prescan": {
      "blueprint_id": "Loop",
      "name": "prescan",
      "type": "sequence_element_definition"
    },
    "prescan.length": {
      "name": "prescan.length",
      "script": "return number_prescans",
      "sources": {
        "number_prescans": "number_prescans"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup": {
      "blueprint_id": "Loop",
      "name": "prescan.slicegroup",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.length": {
      "name": "prescan.slicegroup.length",
      "script": "if seq_dim == 2 then\n  return slice_groups\nend\nreturn 1",
      "sources": {
        "seq_dim": "info_seq_dim",
        "slice_groups": "slice_groups"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment": {
      "blueprint_id": "Loop",
      "name": "prescan.slicegroup.segment",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.segment.length": {
      "name": "prescan.slicegroup.segment.length",
      "script": "if slicegroup_length == 1 then\n  return 1\nend\nreturn kernel_info.segs['phase']",
      "sources": {
        "kernel_info": "prescan.slicegroup.segment.slice.kernel.kernel_info",
        "slicegroup_length": "prescan.slicegroup.length"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice": {
      "blueprint_id": "Loop",
      "name": "prescan.slicegroup.segment.slice",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.segment.slice.fatsat": {
      "blueprint_id": "af23ab59-ef56-498a-8af0-bd73d29e5caf",
      "name": "prescan.slicegroup.segment.slice.fatsat",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.segment.slice.fatsat.tstart": {
      "name": "prescan.slicegroup.segment.slice.fatsat.tstart",
      "script": "if inversion_recovery ~= 'None' then\n  return t_before_center + TI - t_before_exc - fatsat_dur\nelse\n  return 0\nend",
      "sources": {
        "TI": "TI",
        "fatsat_dur": "prescan.slicegroup.segment.slice.fatsat.duration",
        "inversion_recovery": "inversion_recovery",
        "t_before_center": "prescan.slicegroup.segment.slice.invrec.t_before_center",
        "t_before_exc": "prescan.slicegroup.segment.slice.kernel.t_before_exc"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.invrec": {
      "blueprint_id": "9d05018d-2fc8-42a8-9671-24307c01d347",
      "name": "prescan.slicegroup.segment.slice.invrec",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.segment.slice.invrec.tstart": {
      "name": "prescan.slicegroup.segment.slice.invrec.tstart",
      "script": "return 0",
      "sources": {},
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.kernel": {
      "blueprint_id": "824044bb-46c7-4792-b862-467c11d81102",
      "name": "prescan.slicegroup.segment.slice.kernel",
      "type": "sequence_element_definition"
    },
    "prescan.slicegroup.segment.slice.kernel.encoding.corr.line.readout.adc.set_enabled": {
      "name": "prescan.slicegroup.segment.slice.kernel.encoding.corr.line.readout.adc.set_enabled",
      "script": "return false",
      "sources": {},
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.kernel.encoding.echo.partition.line.single_readout.adc.set_enabled": {
      "name": "prescan.slicegroup.segment.slice.kernel.encoding.echo.partition.line.single_readout.adc.set_enabled",
      "script": "return false",
      "sources": {},
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.kernel.encoding.freqcorr.adc.set_enabled": {
      "name": "prescan.slicegroup.segment.slice.kernel.encoding.freqcorr.adc.set_enabled",
      "script": "return false",
      "sources": {},
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.kernel.excitation_mode": {
      "name": "prescan.slicegroup.segment.slice.kernel.excitation_mode",
      "script": "if seq_dim == 3 and exc_type == 'global' then\n  return 'global'\nend\nreturn 'sinc'",
      "sources": {
        "exc_type": "excitation_type",
        "seq_dim": "info_seq_dim"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.kernel.tstart": {
      "name": "prescan.slicegroup.segment.slice.kernel.tstart",
      "script": "return fatsat_tstart + fatsat_dur",
      "sources": {
        "fatsat_dur": "prescan.slicegroup.segment.slice.fatsat.duration",
        "fatsat_tstart": "prescan.slicegroup.segment.slice.fatsat.tstart"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.length": {
      "name": "prescan.slicegroup.segment.slice.length",
      "script": "if seq_dim == 2 then\n  return math.ceil(kernel_info.acq_slices/slicegroup_length)\nend\nreturn 1",
      "sources": {
        "kernel_info": "prescan.slicegroup.segment.slice.kernel.kernel_info",
        "seq_dim": "info_seq_dim",
        "slicegroup_length": "prescan.slicegroup.length"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.slice_info_line_pos": {
      "name": "prescan.slicegroup.segment.slice.slice_info_line_pos",
      "script": "local total_slice_counter = slicegroup_counter*slice_length + slice_counter\nif total_slice_counter < slices then\n  return total_slice_counter\nend\nreturn 0",
      "sources": {
        "slice_counter": "prescan.slicegroup.segment.slice.counter",
        "slice_length": "prescan.slicegroup.segment.slice.length",
        "slicegroup_counter": "prescan.slicegroup.counter",
        "slices": "slices"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.slice.tstart": {
      "name": "prescan.slicegroup.segment.slice.tstart",
      "script": "return slice_counter / slice_length * TR",
      "sources": {
        "TR": "TR",
        "slice_counter": "prescan.slicegroup.segment.slice.counter",
        "slice_length": "prescan.slicegroup.segment.slice.length"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.segment.tstart": {
      "name": "prescan.slicegroup.segment.tstart",
      "script": "return seg_counter * TR",
      "sources": {
        "TR": "TR",
        "seg_counter": "prescan.slicegroup.segment.counter"
      },
      "type": "parameter_definition"
    },
    "prescan.slicegroup.tstart": {
      "name": "prescan.slicegroup.tstart",
      "script": "return slicegroup_counter * seg_length * TR",
      "sources": {
        "TR": "TR",
        "seg_length": "prescan.slicegroup.segment.length",
        "slicegroup_counter": "prescan.slicegroup.counter"
      },
      "type": "parameter_definition"
    },
    "prescan.tstart": {
      "name": "prescan.tstart",
      "script": "return pat_ref_dur + pre_counter * slicegroup_length * seg_length * TR",
      "sources": {
        "TR": "TR",
        "pat_ref_dur": "pat_ref.duration",
        "pre_counter": "prescan.counter",
        "seg_length": "prescan.slicegroup.segment.length",
        "slicegroup_length": "prescan.slicegroup.length"
      },
      "type": "parameter_definition"
    },
    "repetition": {
      "blueprint_id": "Loop",
      "name": "repetition",
      "type": "sequence_element_definition"
    },
    "repetition.length": {
      "name": "repetition.length",
      "script": "return measurements",
      "sources": {
        "measurements": "measurements"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup": {
      "blueprint_id": "Loop",
      "name": "repetition.slicegroup",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.length": {
      "name": "repetition.slicegroup.length",
      "script": "if seq_dim == 2 then\n  return slice_groups\nend\nreturn 1",
      "sources": {
        "seq_dim": "info_seq_dim",
        "slice_groups": "slice_groups"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment": {
      "blueprint_id": "Loop",
      "name": "repetition.slicegroup.segment",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.segment.length": {
      "name": "repetition.slicegroup.segment.length",
      "script": "return kernel_info.segs['total']",
      "sources": {
        "kernel_info": "repetition.slicegroup.segment.slice.kernel.kernel_info"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice": {
      "blueprint_id": "Loop",
      "name": "repetition.slicegroup.segment.slice",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.segment.slice.fatsat": {
      "blueprint_id": "af23ab59-ef56-498a-8af0-bd73d29e5caf",
      "name": "repetition.slicegroup.segment.slice.fatsat",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.segment.slice.fatsat.tstart": {
      "name": "repetition.slicegroup.segment.slice.fatsat.tstart",
      "script": "if inversion_recovery ~= 'None' then\n  return t_before_center + TI - t_before_exc - fatsat_dur\nelse\n  return 0\nend",
      "sources": {
        "TI": "TI",
        "fatsat_dur": "repetition.slicegroup.segment.slice.fatsat.duration",
        "inversion_recovery": "inversion_recovery",
        "t_before_center": "repetition.slicegroup.segment.slice.invrec.t_before_center",
        "t_before_exc": "repetition.slicegroup.segment.slice.kernel.t_before_exc"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.invrec": {
      "blueprint_id": "9d05018d-2fc8-42a8-9671-24307c01d347",
      "name": "repetition.slicegroup.segment.slice.invrec",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.segment.slice.invrec.tstart": {
      "name": "repetition.slicegroup.segment.slice.invrec.tstart",
      "script": "return 0",
      "sources": {},
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.kernel": {
      "blueprint_id": "824044bb-46c7-4792-b862-467c11d81102",
      "name": "repetition.slicegroup.segment.slice.kernel",
      "type": "sequence_element_definition"
    },
    "repetition.slicegroup.segment.slice.kernel.encoding.echo.partition.line.single_readout.adc.set_enabled": {
      "name": "repetition.slicegroup.segment.slice.kernel.encoding.echo.partition.line.single_readout.adc.set_enabled",
      "script": "local total_slice_counter = slicegroup_counter*slice_length + slice_counter\nif total_slice_counter < slices then\n  return true\nend\nreturn false",
      "sources": {
        "slice_counter": "repetition.slicegroup.segment.slice.counter",
        "slice_length": "repetition.slicegroup.segment.slice.length",
        "slicegroup_counter": "repetition.slicegroup.counter",
        "slices": "slices"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.kernel.excitation_mode": {
      "name": "repetition.slicegroup.segment.slice.kernel.excitation_mode",
      "script": "if seq_dim == 3 and exc_type == 'global' then\n  return 'global'\nend\nreturn 'sinc'",
      "sources": {
        "exc_type": "excitation_type",
        "seq_dim": "info_seq_dim"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.kernel.tstart": {
      "name": "repetition.slicegroup.segment.slice.kernel.tstart",
      "script": "return fatsat_tstart + fatsat_dur",
      "sources": {
        "fatsat_dur": "repetition.slicegroup.segment.slice.fatsat.duration",
        "fatsat_tstart": "repetition.slicegroup.segment.slice.fatsat.tstart"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.length": {
      "name": "repetition.slicegroup.segment.slice.length",
      "script": "if seq_dim == 2 then\n  return math.ceil(kernel_info.acq_slices/slicegroup_length)\nend\nreturn 1",
      "sources": {
        "kernel_info": "repetition.slicegroup.segment.slice.kernel.kernel_info",
        "seq_dim": "info_seq_dim",
        "slicegroup_length": "repetition.slicegroup.length"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.slice_info_line_pos": {
      "name": "repetition.slicegroup.segment.slice.slice_info_line_pos",
      "script": "local total_slice_counter = slicegroup_counter*slice_length + slice_counter\nif total_slice_counter < slices then\n  return total_slice_counter\nend\nreturn 0",
      "sources": {
        "slice_counter": "repetition.slicegroup.segment.slice.counter",
        "slice_length": "repetition.slicegroup.segment.slice.length",
        "slicegroup_counter": "repetition.slicegroup.counter",
        "slices": "slices"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.slice.tstart": {
      "name": "repetition.slicegroup.segment.slice.tstart",
      "script": "return slice_counter / slice_length * TR",
      "sources": {
        "TR": "TR",
        "slice_counter": "repetition.slicegroup.segment.slice.counter",
        "slice_length": "repetition.slicegroup.segment.slice.length"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.segment.tstart": {
      "name": "repetition.slicegroup.segment.tstart",
      "script": "return seg_counter * TR",
      "sources": {
        "TR": "TR",
        "seg_counter": "repetition.slicegroup.segment.counter"
      },
      "type": "parameter_definition"
    },
    "repetition.slicegroup.tstart": {
      "name": "repetition.slicegroup.tstart",
      "script": "return slicegroup_counter * seg_length * TR",
      "sources": {
        "TR": "TR",
        "seg_length": "repetition.slicegroup.segment.length",
        "slicegroup_counter": "repetition.slicegroup.counter"
      },
      "type": "parameter_definition"
    },
    "repetition.tstart": {
      "name": "repetition.tstart",
      "script": "return pat_ref_dur + pre_length * slicegroup_length_pre * seg_length_pre * TR + rep_counter * slicegroup_length * seg_length * TR",
      "sources": {
        "TR": "TR",
        "pat_ref_dur": "pat_ref.duration",
        "pre_length": "prescan.length",
        "rep_counter": "repetition.counter",
        "seg_length": "repetition.slicegroup.segment.length",
        "seg_length_pre": "prescan.slicegroup.segment.length",
        "slicegroup_length": "repetition.slicegroup.length",
        "slicegroup_length_pre": "prescan.slicegroup.length"
      },
      "type": "parameter_definition"
    },
    "slice_info_line_pos_forwarding": {
      "forward_as": "repetition.slicegroup.segment.slice.slice_info_line_pos",
      "name": "slice_info_line_pos_forwarding",
      "source_to_forward": "repetition.slicegroup.segment.slice.slice_info_line_pos",
      "type": "forwarding_definition"
    },
    "slice_info_line_pos_prescan_forwarding": {
      "forward_as": "prescan.slicegroup.segment.slice.slice_info_line_pos",
      "name": "slice_info_line_pos_prescan_forwarding",
      "source_to_forward": "prescan.slicegroup.segment.slice.slice_info_line_pos",
      "type": "forwarding_definition"
    }
  },
  "id": "e1e0b6a6-e73a-402e-908b-87fe8ccc15f4",
  "name": "EPI structure",
  "properties": {
    "tags": [
      ""
    ]
  }
}