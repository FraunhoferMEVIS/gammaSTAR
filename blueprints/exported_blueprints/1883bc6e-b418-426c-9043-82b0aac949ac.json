{
  "definitions": {
    "duration": {
      "name": "duration",
      "script": "return rf_dur",
      "sources": {
        "rf_dur": "rf.duration"
      },
      "type": "parameter_definition"
    },
    "flip_angle": {
      "name": "flip_angle",
      "script": "return 90",
      "sources": {},
      "type": "parameter_definition"
    },
    "rf": {
      "blueprint_id": "RFPulse",
      "name": "rf",
      "type": "sequence_element_definition"
    },
    "rf.duration": {
      "name": "rf.duration",
      "script": "return 2.56e-3",
      "sources": {},
      "type": "parameter_definition"
    },
    "rf.samples": {
      "name": "rf.samples",
      "script": "local num_samples = 128\nlocal samples_t, samples_am, samples_fm = {}, {}, {}\nlocal dwell_time = duration / num_samples\nfor i = 0, num_samples-1 do\n  table.insert(samples_t, (i+0.5)*dwell_time)\nend\nlocal alpha = 0.5 --Hanning\nlocal amp_int = 0\nfor i = 1, num_samples do\n  samples_fm[i] = 0\n  local x = (-0.5 + samples_t[i]/duration) * t_bw_product * math.pi\n  if x == 0 then\n    samples_am[i] = 1\n  else\n    local filter_value = 1-alpha+alpha*math.cos((-1+2*samples_t[i]/duration)*math.pi)\n    samples_am[i] = filter_value * math.sin(x)/x\n  end\n  amp_int = amp_int + samples_am[i]\nend\nlocal rf_amp = (flip_angle/180*math.pi)/(2*math.pi*gamma*duration) * num_samples/amp_int\nfor i = 1, num_samples do\n  samples_am[i] = samples_am[i] * rf_amp\nend\nreturn {t=samples_t, am=samples_am, fm=samples_fm}\n    ",
      "sources": {
        "duration": "rf.duration",
        "flip_angle": "flip_angle",
        "gamma": "sys_gamma",
        "t_bw_product": "t_bw_product"
      },
      "type": "parameter_definition"
    },
    "rf.tstart": {
      "name": "rf.tstart",
      "script": "return 0",
      "sources": {},
      "type": "parameter_definition"
    },
    "slice_amp": {
      "name": "slice_amp",
      "script": "return helper_functions.dx_to_m0(thickness) * t_bw_product / rf_dur",
      "sources": {
        "helper_functions": "helper_functions",
        "rf_dur": "rf.duration",
        "t_bw_product": "t_bw_product",
        "thickness": "thickness"
      },
      "type": "parameter_definition"
    },
    "t_bw_product": {
      "name": "t_bw_product",
      "script": "return 5.2",
      "sources": {},
      "type": "parameter_definition"
    },
    "tcenter": {
      "name": "tcenter",
      "script": "return tstart + asymmetry * duration",
      "sources": {
        "asymmetry": "rf.asymmetry",
        "duration": "rf.duration",
        "tstart": "tstart"
      },
      "type": "parameter_definition"
    },
    "thickness": {
      "name": "thickness",
      "script": "return 5e-3",
      "sources": {},
      "type": "parameter_definition"
    }
  },
  "id": "1883bc6e-b418-426c-9043-82b0aac949ac",
  "name": "Demo simplified RF Sinc",
  "properties": {
    "tags": [
      ""
    ]
  }
}